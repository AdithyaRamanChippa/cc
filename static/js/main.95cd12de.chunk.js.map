{"version":3,"sources":["components/Login/index.js","data/employees.js","components/Dashboard/Header.js","components/Dashboard/Table.js","components/Dashboard/Add.js","components/Dashboard/Edit.js","components/Dashboard/index.js","components/App/index.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","adminEmail","adminPassword","userEnteredEmail","userEnteredPassword","handleInputChange","bind","assertThisInitialized","handleLogin","propName","e","setState","defineProperty","target","value","_this2","_this$state","Swal","fire","timer","onBeforeOpen","showLoading","onClose","onLoginSuccess","position","type","title","showConfirmButton","_this3","react_default","a","createElement","className","htmlFor","id","placeholder","onChange","onClick","Component","EMPLOYEES_DATA","firstName","lastName","email","salary","date","Header","_this$props","handleAddClick","handleLogout","Table","employeesData","handleEditClick","handleDelete","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","colSpan","length","map","employee","i","key","format","Add","handleAdd","onAddSuccess","newEmployeeData","push","handleAddCancel","Edit","selectedEmployee","handleUpdate","onUpdateSuccess","indexOf","_this$state2","handleEditCancel","defaultValue","Dashboard","addClicked","editeClicked","filter","employeeData","splice","text","concat","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","updatedList","cancelButtonText","onLogoutSuccess","Dashboard_Header","Dashboard_Table","Dashboard_Add","Dashboard_Edit","App","isLoggedIn","components_Login","components_Dashboard","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.95cd12de.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      adminEmail: 'admin@example.com',\r\n      adminPassword: 'qwerty',\r\n      userEnteredEmail: null,\r\n      userEnteredPassword: null\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n\r\n  handleInputChange(propName, e) {\r\n    this.setState({ [propName]: e.target.value });\r\n  }\r\n\r\n  handleLogin() {\r\n    const {\r\n      adminEmail,\r\n      adminPassword,\r\n      userEnteredEmail,\r\n      userEnteredPassword\r\n    } = this.state;\r\n\r\n    if (\r\n      userEnteredEmail === adminEmail &&\r\n      userEnteredPassword === adminPassword\r\n    ) {\r\n      Swal.fire({\r\n        timer: 1500,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        onClose: () => {\r\n          this.props.onLoginSuccess();\r\n\r\n          Swal.fire({\r\n            position: 'center',\r\n            type: 'success',\r\n            title: 'Successfully logged in',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        timer: 1500,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        onClose: () => {\r\n          Swal.fire({\r\n            position: 'center',\r\n            type: 'error',\r\n            title: 'Incorrect credentials !',\r\n            showConfirmButton: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"small-container\">\r\n        <form>\r\n          <h1>Admin Login</h1>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"admin@example.com\"\r\n            onChange={e => this.handleInputChange('userEnteredEmail', e)}\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"qwerty\"\r\n            onChange={e => this.handleInputChange('userEnteredPassword', e)}\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            onClick={this.handleLogin}\r\n            value=\"Login\"\r\n            className=\"login-btn\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","const EMPLOYEES_DATA = [\r\n  {\r\n    id: 1,\r\n    firstName: 'Susan',\r\n    lastName: 'Jordon',\r\n    email: 'susan@example.com',\r\n    salary: '68000',\r\n    date: '2019-02-05'\r\n  },\r\n  {\r\n    id: 2,\r\n    firstName: 'Clark',\r\n    lastName: 'Kent',\r\n    email: 'clark@example.com',\r\n    salary: '175000',\r\n    date: '2010-11-01'\r\n  },\r\n  {\r\n    id: 3,\r\n    firstName: 'Rolf',\r\n    lastName: 'Hegdal',\r\n    email: 'rolf@example.com',\r\n    salary: '130000',\r\n    date: '2010-06-15'\r\n  },\r\n  {\r\n    id: 4,\r\n    firstName: 'diana',\r\n    lastName: 'prince',\r\n    email: 'diana@example.com',\r\n    salary: '140000',\r\n    date: '2019-03-10'\r\n  },\r\n  {\r\n    id: 5,\r\n    firstName: 'Arsenio',\r\n    lastName: 'Grant',\r\n    email: 'arsenio@example.com',\r\n    salary: '68000',\r\n    date: '2017-04-18'\r\n  },\r\n  {\r\n    id: 6,\r\n    firstName: 'Tim',\r\n    lastName: 'Fisher',\r\n    email: 'fisher@example.com',\r\n    salary: '120000',\r\n    date: '2014-04-19'\r\n  },\r\n  {\r\n    id: 7,\r\n    firstName: 'Alex',\r\n    lastName: 'Smith',\r\n    email: 'alex@example.com',\r\n    salary: '87000',\r\n    date: '2012-05-07'\r\n  },\r\n  {\r\n    id: 8,\r\n    firstName: 'Ede',\r\n    lastName: 'Judge',\r\n    email: 'ede@example.com',\r\n    salary: '90000',\r\n    date: '2018-01-20'\r\n  },\r\n  {\r\n    id: 9,\r\n    firstName: 'Mark',\r\n    lastName: 'jonas',\r\n    email: 'mark@example.com',\r\n    salary: '71000',\r\n    date: '2017-08-27'\r\n  },\r\n  {\r\n    id: 10,\r\n    firstName: 'Bruce',\r\n    lastName: 'Wayne',\r\n    email: 'bruce@example.com',\r\n    salary: '194000',\r\n    date: '2016-07-11'\r\n  }\r\n];\r\n\r\nexport { EMPLOYEES_DATA };\r\n","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { handleAddClick, handleLogout } = this.props;\r\n\r\n    return (\r\n      <header>\r\n        <h1>Employees Data</h1>\r\n        <div className=\"main-btns\">\r\n          <button onClick={handleAddClick}>Add Employee</button>\r\n          <button onClick={handleLogout} className=\"logout-btn accent-button\">\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { employeesData, handleEditClick, handleDelete } = this.props;\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: null\r\n    });\r\n\r\n    return (\r\n      <div className=\"contain-table\">\r\n        <table className=\"striped-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Salary</th>\r\n              <th>Date</th>\r\n              <th colSpan={2} className=\"text-center\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {employeesData.length > 0 ? (\r\n              employeesData.map((employee, i) => (\r\n                <tr key={employee.id}>\r\n                  <td>{++i}</td>\r\n                  <td>{employee.firstName}</td>\r\n                  <td>{employee.lastName}</td>\r\n                  <td>{employee.email}</td>\r\n                  <td>{formatter.format(employee.salary)}</td>\r\n                  <td>{employee.date} </td>\r\n                  <td className=\"text-right\">\r\n                    <button\r\n                      onClick={() => handleEditClick(employee.id)}\r\n                      className=\"button muted-button\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </td>\r\n                  <td className=\"text-left\">\r\n                    <button\r\n                      onClick={() => handleDelete(employee.id)}\r\n                      className=\"button muted-button\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={7}>No Employees</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Add extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: null,\r\n      lastName: null,\r\n      email: null,\r\n      salary: null,\r\n      date: null\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n  }\r\n\r\n  handleInputChange(propName, e) {\r\n    this.setState({ [propName]: e.target.value });\r\n  }\r\n\r\n  handleAdd() {\r\n    const { firstName, lastName, email, salary, date } = this.state;\r\n    const { employeesData, onAddSuccess } = this.props;\r\n\r\n    if (firstName === null) {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (lastName === null) {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (email === null) {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (salary === null) {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (date === null) {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    }\r\n\r\n    const id = employeesData.length + 1;\r\n    const newEmployeeData = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date\r\n    };\r\n\r\n    employeesData.push(newEmployeeData);\r\n    onAddSuccess(employeesData);\r\n\r\n    Swal.fire({\r\n      position: 'center',\r\n      type: 'success',\r\n      title: 'New employee added',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { handleAddCancel } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form>\r\n          <h1>Add Employee</h1>\r\n          <label htmlFor=\"fName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            onChange={e => this.handleInputChange('firstName', e)}\r\n          />\r\n          <label htmlFor=\"lName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            onChange={e => this.handleInputChange('lastName', e)}\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={e => this.handleInputChange('email', e)}\r\n          />\r\n          <label htmlFor=\"salary\">Salary ($)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"salary\"\r\n            onChange={e => this.handleInputChange('salary', e)}\r\n          />\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            onChange={e => this.handleInputChange('date', e)}\r\n          />\r\n          <div className=\"main-btns\">\r\n            <input type=\"button\" onClick={this.handleAdd} value=\"Add\" />\r\n            <input\r\n              type=\"button\"\r\n              onClick={handleAddCancel}\r\n              value=\"Cancel\"\r\n              className=\"accent-button cancel\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Add;\r\n","import React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: props.selectedEmployee.id,\r\n      firstName: props.selectedEmployee.firstName,\r\n      lastName: props.selectedEmployee.lastName,\r\n      email: props.selectedEmployee.email,\r\n      salary: props.selectedEmployee.salary,\r\n      date: props.selectedEmployee.date\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n  }\r\n\r\n  handleInputChange(propName, e) {\r\n    this.setState({ [propName]: e.target.value });\r\n  }\r\n\r\n  handleUpdate() {\r\n    const { id, firstName, lastName, email, salary, date } = this.state;\r\n    const { onUpdateSuccess } = this.props;\r\n\r\n    if (firstName === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (lastName === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (email === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (email.indexOf(' ') !== -1) {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (salary === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (date === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    }\r\n\r\n    const employeeData = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date\r\n    };\r\n\r\n    onUpdateSuccess(id, employeeData);\r\n  }\r\n\r\n  render() {\r\n    const { firstName, lastName, email, salary, date } = this.state;\r\n    const { handleEditCancel } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form>\r\n          <h1>Edit Employee Data</h1>\r\n          <label htmlFor=\"fName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            defaultValue={firstName}\r\n            onChange={e => this.handleInputChange('firstName', e)}\r\n          />\r\n          <label htmlFor=\"lName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            defaultValue={lastName}\r\n            onChange={e => this.handleInputChange('lastName', e)}\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            defaultValue={email}\r\n            onChange={e => this.handleInputChange('email', e)}\r\n          />\r\n          <label htmlFor=\"salary\">Salary ($)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"salary\"\r\n            defaultValue={salary}\r\n            onChange={e => this.handleInputChange('salary', e)}\r\n          />\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            defaultValue={date}\r\n            onChange={e => this.handleInputChange('date', e)}\r\n          />\r\n          <div className=\"main-btns\">\r\n            <input type=\"button\" onClick={this.handleUpdate} value=\"Update\" />\r\n            <input\r\n              type=\"button\"\r\n              onClick={handleEditCancel}\r\n              value=\"Cancel\"\r\n              className=\"accent-button cancel\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;\r\n","import React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { EMPLOYEES_DATA } from '../../data/employees';\r\n\r\nimport Header from './Header';\r\nimport Table from './Table';\r\nimport Add from './Add';\r\nimport Edit from './Edit';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      employeesData: EMPLOYEES_DATA,\r\n      addClicked: false,\r\n      editeClicked: false,\r\n      selectedEmployee: null\r\n    };\r\n\r\n    this.handleAddClick = this.handleAddClick.bind(this);\r\n    this.handleEditClick = this.handleEditClick.bind(this);\r\n    this.handleAddCancel = this.handleAddCancel.bind(this);\r\n    this.handleEditCancel = this.handleEditCancel.bind(this);\r\n    this.onAddSuccess = this.onAddSuccess.bind(this);\r\n    this.onUpdateSuccess = this.onUpdateSuccess.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  handleAddClick() {\r\n    this.setState({ addClicked: true });\r\n  }\r\n\r\n  handleEditClick(id) {\r\n    const result = this.state.employeesData.filter(\r\n      employee => employee.id === id\r\n    );\r\n\r\n    const employee = result[0];\r\n    this.setState({ editeClicked: true, selectedEmployee: employee });\r\n  }\r\n\r\n  handleAddCancel() {\r\n    this.setState({ addClicked: false });\r\n  }\r\n\r\n  handleEditCancel() {\r\n    this.setState({ editeClicked: false });\r\n  }\r\n\r\n  onAddSuccess(employeesData) {\r\n    this.setState({ employeesData, addClicked: false });\r\n  }\r\n\r\n  onUpdateSuccess(id, employeeData) {\r\n    const { employeesData } = this.state;\r\n\r\n    employeesData.map((employee, i) => {\r\n      id === employee.id\r\n        ? employeesData.splice(i, 1, employeeData)\r\n        : Swal.fire({\r\n            type: 'error',\r\n            title: 'Oops...',\r\n            text: 'Something went wrong!'\r\n          });\r\n      return false;\r\n    });\r\n    this.setState({\r\n      employeesData,\r\n      editeClicked: false\r\n    });\r\n    Swal.fire({\r\n      position: 'center',\r\n      type: 'success',\r\n      title: `${employeeData.firstName} ${employeeData.lastName} data updated.`,\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n\r\n    // console.log(this.state.employeesData);\r\n  }\r\n\r\n  handleDelete(id) {\r\n    const { employeesData } = this.state;\r\n\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        const result = employeesData.filter(employee => employee.id === id);\r\n        const employee = result[0];\r\n\r\n        Swal.fire({\r\n          position: 'center',\r\n          type: 'success',\r\n          title: 'Deleted!',\r\n          text: `${employee.firstName} ${employee.lastName} has been deleted.`,\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        });\r\n\r\n        const updatedList = employeesData.filter(\r\n          employee => employee.id !== id\r\n        );\r\n\r\n        // console.log(updatedList);\r\n        this.setState({ employeesData: updatedList });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleLogout() {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#d33',\r\n      cancelButtonColor: '#3085d6',\r\n      confirmButtonText: 'Yes, log me out!',\r\n      cancelButtonText: 'No, keep me in'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        Swal.fire({\r\n          timer: 1500,\r\n          onBeforeOpen: () => {\r\n            Swal.showLoading();\r\n          },\r\n          onClose: () => {\r\n            this.props.onLogoutSuccess();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      employeesData,\r\n      addClicked,\r\n      editeClicked,\r\n      selectedEmployee\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {!addClicked && !editeClicked && (\r\n          <Header\r\n            handleAddClick={this.handleAddClick}\r\n            handleLogout={this.handleLogout}\r\n          />\r\n        )}\r\n        {!addClicked && !editeClicked && (\r\n          <Table\r\n            employeesData={employeesData}\r\n            handleEditClick={this.handleEditClick}\r\n            handleDelete={this.handleDelete}\r\n          />\r\n        )}\r\n        {addClicked && (\r\n          <Add\r\n            employeesData={employeesData}\r\n            onAddSuccess={this.onAddSuccess}\r\n            handleAddCancel={this.handleAddCancel}\r\n          />\r\n        )}\r\n        {editeClicked && (\r\n          <Edit\r\n            selectedEmployee={selectedEmployee}\r\n            onUpdateSuccess={this.onUpdateSuccess}\r\n            handleEditCancel={this.handleEditCancel}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nimport Login from '../Login';\r\nimport Dashboard from '../Dashboard';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoggedIn: false\r\n    };\r\n\r\n    this.onLoginSuccess = this.onLoginSuccess.bind(this);\r\n    this.onLogoutSuccess = this.onLogoutSuccess.bind(this);\r\n  }\r\n\r\n  onLoginSuccess() {\r\n    this.setState({ isLoggedIn: true });\r\n  }\r\n\r\n  onLogoutSuccess() {\r\n    this.setState({ isLoggedIn: false });\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {!isLoggedIn && <Login onLoginSuccess={this.onLoginSuccess} />}\r\n        {isLoggedIn && <Dashboard onLogoutSuccess={this.onLogoutSuccess} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}