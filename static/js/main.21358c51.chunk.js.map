{"version":3,"sources":["components/Login/index.js","components/Logout/index.js","components/Dashboard/Header.js","components/Dashboard/Table.js","components/Dashboard/Add.js","components/Dashboard/Edit.js","data/index.js","components/Dashboard/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Login","setIsAuthenticated","useState","email","setEmail","password","setPassword","className","onSubmit","e","preventDefault","Swal","fire","timer","onBeforeOpen","showLoading","onClose","icon","title","showConfirmButton","text","htmlFor","id","type","name","placeholder","value","onChange","target","style","marginTop","Logout","marginLeft","onClick","showCancelButton","confirmButtonText","cancelButtonText","then","result","Header","setIsAdding","marginBottom","Table","employees","handleEdit","handleDelete","forEach","employee","i","formatter","Intl","NumberFormat","currency","minimumFractionDigits","colSpan","length","map","key","firstName","lastName","format","salary","date","Add","setEmployees","setFirstName","setLastName","setSalary","setDate","newEmployee","push","Edit","selectedEmployee","setIsEditing","splice","employeesData","Dashboard","setSelectedEmployee","isAdding","isEditing","filter","App","isAuthenticated","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.21358c51.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  const adminEmail = 'admin@example.com';\r\n  const adminPassword = 'qwerty';\r\n\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  const [password, setPassword] = useState('qwerty');\r\n\r\n  const handleLogin = e => {\r\n    e.preventDefault();\r\n\r\n    if (email === adminEmail && password === adminPassword) {\r\n      Swal.fire({\r\n        timer: 1500,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        onClose: () => {\r\n          setIsAuthenticated(true);\r\n\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Successfully logged in!',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        timer: 1500,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        onClose: () => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error!',\r\n            text: 'Incorrect email or password.',\r\n            showConfirmButton: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"small-container\">\r\n      <form onSubmit={handleLogin}>\r\n        <h1>Admin Login</h1>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"admin@example.com\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"qwerty\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <input style={{ marginTop: '12px' }} type=\"submit\" value=\"Login\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Logout = ({ setIsAuthenticated }) => {\r\n  const handleLogout = () => {\r\n    Swal.fire({\r\n      icon: 'question',\r\n      title: 'Are you sure?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, log me out!',\r\n      cancelButtonText: 'No, keep me logged in!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        Swal.fire({\r\n          timer: 1500,\r\n          onBeforeOpen: () => {\r\n            Swal.showLoading();\r\n          },\r\n          onClose: () => {\r\n            setIsAuthenticated(false);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={{ marginLeft: '12px' }}\r\n      className=\"muted-button\"\r\n      onClick={handleLogout}\r\n    >\r\n      Logout\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\n\r\nimport Logout from '../Logout';\r\n\r\nconst Header = ({ setIsAdding, setIsAuthenticated }) => {\r\n  return (\r\n    <header>\r\n      <h1>Employee Management Software</h1>\r\n      <div style={{ marginTop: '30px', marginBottom: '18px' }}>\r\n        <button onClick={() => setIsAdding(true)}>Add Employee</button>\r\n        <Logout setIsAuthenticated={setIsAuthenticated} />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Table = ({ employees, handleEdit, handleDelete }) => {\r\n  employees.forEach((employee, i) => {\r\n    employee.id = i + 1;\r\n  });\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: null\r\n  });\r\n\r\n  return (\r\n    <div className=\"contain-table\">\r\n      <table className=\"striped-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>No.</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Salary</th>\r\n            <th>Date</th>\r\n            <th colSpan={2} className=\"text-center\">\r\n              Actions\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.length > 0 ? (\r\n            employees.map((employee, i) => (\r\n              <tr key={employee.id}>\r\n                <td>{i + 1}</td>\r\n                <td>{employee.firstName}</td>\r\n                <td>{employee.lastName}</td>\r\n                <td>{employee.email}</td>\r\n                <td>{formatter.format(employee.salary)}</td>\r\n                <td>{employee.date} </td>\r\n                <td className=\"text-right\">\r\n                  <button\r\n                    onClick={() => handleEdit(employee.id)}\r\n                    className=\"button muted-button\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </td>\r\n                <td className=\"text-left\">\r\n                  <button\r\n                    onClick={() => handleDelete(employee.id)}\r\n                    className=\"button muted-button\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={7}>No Employees</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Add = ({ employees, setEmployees, setIsAdding }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [salary, setSalary] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n  const handleAdd = e => {\r\n    e.preventDefault();\r\n\r\n    if (!firstName || !lastName || !email || !salary || !date) {\r\n      return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error!',\r\n        text: 'All fields are required.',\r\n        showConfirmButton: true\r\n      });\r\n    }\r\n\r\n    const id = employees.length + 1;\r\n    const newEmployee = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date\r\n    };\r\n\r\n    employees.push(newEmployee);\r\n    setEmployees(employees);\r\n    setIsAdding(false);\r\n\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: 'Added!',\r\n      text: `${firstName} ${lastName}'s data has been Added.`,\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"small-container\">\r\n      <form onSubmit={handleAdd}>\r\n        <h1>Add Employee</h1>\r\n        <label htmlFor=\"firstName\">First Name</label>\r\n        <input\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={firstName}\r\n          onChange={e => setFirstName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n        <input\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={lastName}\r\n          onChange={e => setLastName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"salary\">Salary ($)</label>\r\n        <input\r\n          id=\"salary\"\r\n          type=\"number\"\r\n          name=\"salary\"\r\n          value={salary}\r\n          onChange={e => setSalary(e.target.value)}\r\n        />\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input\r\n          id=\"date\"\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={date}\r\n          onChange={e => setDate(e.target.value)}\r\n        />\r\n        <div style={{ marginTop: '30px' }}>\r\n          <input type=\"submit\" value=\"Add\" />\r\n          <input\r\n            style={{ marginLeft: '12px' }}\r\n            className=\"muted-button\"\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            onClick={() => setIsAdding(false)}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Edit = ({ employees, selectedEmployee, setEmployees, setIsEditing }) => {\r\n  const id = selectedEmployee.id;\r\n\r\n  const [firstName, setFirstName] = useState(selectedEmployee.firstName);\r\n  const [lastName, setLastName] = useState(selectedEmployee.lastName);\r\n  const [email, setEmail] = useState(selectedEmployee.email);\r\n  const [salary, setSalary] = useState(selectedEmployee.salary);\r\n  const [date, setDate] = useState(selectedEmployee.date);\r\n\r\n  const handleUpdate = e => {\r\n    e.preventDefault();\r\n\r\n    if (!firstName || !lastName || !email || !salary || !date) {\r\n      return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error!',\r\n        text: 'All fields are required.',\r\n        showConfirmButton: true\r\n      });\r\n    }\r\n\r\n    const employee = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date\r\n    };\r\n\r\n    for (let i = 0; i < employees.length; i++) {\r\n      if (employees[i].id === id) {\r\n        employees.splice(i, 1, employee);\r\n        break;\r\n      }\r\n    }\r\n\r\n    setEmployees(employees);\r\n    setIsEditing(false);\r\n\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: 'Updated!',\r\n      text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"small-container\">\r\n      <form onSubmit={handleUpdate}>\r\n        <h1>Edit Employee</h1>\r\n        <label htmlFor=\"firstName\">First Name</label>\r\n        <input\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={firstName}\r\n          onChange={e => setFirstName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n        <input\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={lastName}\r\n          onChange={e => setLastName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"salary\">Salary ($)</label>\r\n        <input\r\n          id=\"salary\"\r\n          type=\"number\"\r\n          name=\"salary\"\r\n          value={salary}\r\n          onChange={e => setSalary(e.target.value)}\r\n        />\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input\r\n          id=\"date\"\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={date}\r\n          onChange={e => setDate(e.target.value)}\r\n        />\r\n        <div style={{ marginTop: '30px' }}>\r\n          <input type=\"submit\" value=\"Update\" />\r\n          <input\r\n            style={{ marginLeft: '12px' }}\r\n            className=\"muted-button\"\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            onClick={() => setIsEditing(false)}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","const employeesData = [\r\n  {\r\n    id: 1,\r\n    firstName: 'Susan',\r\n    lastName: 'Jordon',\r\n    email: 'susan@example.com',\r\n    salary: '95000',\r\n    date: '2019-04-11'\r\n  },\r\n  {\r\n    id: 2,\r\n    firstName: 'Adrienne',\r\n    lastName: 'Doak',\r\n    email: 'adrienne@example.com',\r\n    salary: '80000',\r\n    date: '2019-04-17'\r\n  },\r\n  {\r\n    id: 3,\r\n    firstName: 'Rolf',\r\n    lastName: 'Hegdal',\r\n    email: 'rolf@example.com',\r\n    salary: '79000',\r\n    date: '2019-05-01'\r\n  },\r\n  {\r\n    id: 4,\r\n    firstName: 'Kent',\r\n    lastName: 'Rosner',\r\n    email: 'kent@example.com',\r\n    salary: '56000',\r\n    date: '2019-05-03'\r\n  },\r\n  {\r\n    id: 5,\r\n    firstName: 'Arsenio',\r\n    lastName: 'Grant',\r\n    email: 'arsenio@example.com',\r\n    salary: '65000',\r\n    date: '2019-06-13'\r\n  },\r\n  {\r\n    id: 6,\r\n    firstName: 'Laurena',\r\n    lastName: 'Lurie',\r\n    email: 'laurena@example.com',\r\n    salary: '120000',\r\n    date: '2019-07-30'\r\n  },\r\n  {\r\n    id: 7,\r\n    firstName: 'George',\r\n    lastName: 'Tallman',\r\n    email: 'george@example.com',\r\n    salary: '90000',\r\n    date: '2019-08-15'\r\n  },\r\n  {\r\n    id: 8,\r\n    firstName: 'Jesica',\r\n    lastName: 'Watlington',\r\n    email: 'jesica@example.com',\r\n    salary: '60000',\r\n    date: '2019-10-10'\r\n  },\r\n  {\r\n    id: 9,\r\n    firstName: 'Matthew',\r\n    lastName: 'Warren',\r\n    email: 'matthew@example.com',\r\n    salary: '71000',\r\n    date: '2019-10-15'\r\n  },\r\n  {\r\n    id: 10,\r\n    firstName: 'Lyndsey',\r\n    lastName: 'Follette',\r\n    email: 'lyndsey@example.com',\r\n    salary: '110000',\r\n    date: '2020-01-15'\r\n  }\r\n];\r\n\r\nexport { employeesData };\r\n","import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Header from './Header';\r\nimport Table from './Table';\r\nimport Add from './Add';\r\nimport Edit from './Edit';\r\n\r\nimport { employeesData } from '../../data';\r\n\r\nconst Dashboard = ({ setIsAuthenticated }) => {\r\n  const [employees, setEmployees] = useState(employeesData);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleEdit = id => {\r\n    const [employee] = employees.filter(employee => employee.id === id);\r\n\r\n    setSelectedEmployee(employee);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleDelete = id => {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      cancelButtonText: 'No, keep it!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        const [employee] = employees.filter(employee => employee.id === id);\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Deleted!',\r\n          text: `${employee.firstName} ${employee.lastName}'s data has been deleted.`,\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        });\r\n\r\n        setEmployees(employees.filter(employee => employee.id !== id));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!isAdding && !isEditing && (\r\n        <>\r\n          <Header\r\n            setIsAdding={setIsAdding}\r\n            setIsAuthenticated={setIsAuthenticated}\r\n          />\r\n          <Table\r\n            employees={employees}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n          />\r\n        </>\r\n      )}\r\n      {isAdding && (\r\n        <Add\r\n          employees={employees}\r\n          setEmployees={setEmployees}\r\n          setIsAdding={setIsAdding}\r\n        />\r\n      )}\r\n      {isEditing && (\r\n        <Edit\r\n          employees={employees}\r\n          selectedEmployee={selectedEmployee}\r\n          setEmployees={setEmployees}\r\n          setIsEditing={setIsEditing}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react';\r\n\r\nimport Login from '../Login';\r\nimport Dashboard from '../Dashboard';\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        <Dashboard setIsAuthenticated={setIsAuthenticated} />\r\n      ) : (\r\n        <Login setIsAuthenticated={setIsAuthenticated} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}