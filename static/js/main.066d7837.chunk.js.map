{"version":3,"sources":["App.js","index.js"],"names":["employeesData","id","firstName","lastName","email","salary","date","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","adminEmail","adminPassword","isUser","addClicked","editeClicked","helper","_this2","react_default","a","createElement","className","htmlFor","type","onChange","e","setState","inputEmail","target","value","placeholder","inputPassword","onClick","login","_this3","_this$state","Swal","fire","timer","onBeforeOpen","showLoading","onClose","position","title","showConfirmButton","_this4","logout","length","map","employee","i","key","showUpdate","delete","colSpan","_this5","add","_this$state2","userData","push","_this6","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","x","filter","concat","updatedList","dismiss","_this7","defaultValue","update","_this$state3","_this$state4","newData","splice","_this8","cancelButtonText","_this$state5","loginForm","dataTables","addForm","updateForm","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"iPAIMA,EAAgB,CACpB,CACEC,GAAI,EACJC,UAAW,QACXC,SAAU,MACVC,MAAO,oBACPC,OAAQ,QACRC,KAAM,cAER,CACEL,GAAI,EACJC,UAAW,MACXC,SAAU,SACVC,MAAO,kBACPC,OAAQ,SACRC,KAAM,cAER,CACEL,GAAI,EACJC,UAAW,OACXC,SAAU,SACVC,MAAO,mBACPC,OAAQ,SACRC,KAAM,cAER,CACEL,GAAI,EACJC,UAAW,QACXC,SAAU,SACVC,MAAO,oBACPC,OAAQ,QACRC,KAAM,cAER,CACEL,GAAI,EACJC,UAAW,UACXC,SAAU,QACVC,MAAO,sBACPC,OAAQ,QACRC,KAAM,cAER,CACEL,GAAI,EACJC,UAAW,MACXC,SAAU,SACVC,MAAO,qBACPC,OAAQ,SACRC,KAAM,cAER,CACEL,GAAI,EACJC,UAAW,OACXC,SAAU,QACVC,MAAO,mBACPC,OAAQ,QACRC,KAAM,cAER,CACEL,GAAI,EACJC,UAAW,MACXC,SAAU,QACVC,MAAO,kBACPC,OAAQ,OACRC,KAAM,cAER,CACEL,GAAI,EACJC,UAAW,OACXC,SAAU,QACVC,MAAO,mBACPC,OAAQ,QACRC,KAAM,cAER,CACEL,GAAI,GACJC,UAAW,QACXC,SAAU,QACVC,MAAO,oBACPC,OAAQ,QACRC,KAAM,eA+gBKC,cA1gBb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,WAAY,oBACZC,cAAe,SACfhB,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,KAAM,GACNa,QAAQ,EACRnB,gBACAoB,YAAY,EACZC,cAAc,EACdC,QAAQ,GAdOb,2EAsBP,IAAAc,EAAAX,KACV,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACL5B,GAAG,QACH6B,SAAU,SAAAC,GAAC,OAAIR,EAAKS,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SACpDC,YAAY,sBAEdZ,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,YACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,WACL5B,GAAG,WACH6B,SAAU,SAAAC,GAAC,OAAIR,EAAKS,SAAS,CAAEK,cAAeN,EAAEG,OAAOC,SACvDC,YAAY,WAEdZ,EAAAC,EAAAC,cAAA,SACEG,KAAK,SACLS,QAAS,kBAAMf,EAAKgB,SACpBJ,MAAM,QACNR,UAAU,gDAOZ,IAAAa,EAAA5B,KAAA6B,EAC2D7B,KAAKI,MAA9DC,EADFwB,EACExB,WAAYC,EADduB,EACcvB,cAAee,EAD7BQ,EAC6BR,WAAYI,EADzCI,EACyCJ,cAC3CJ,IAAehB,GAAcoB,IAAkBnB,EACjDwB,IAAKC,KAAK,CACRC,MAAO,KACPC,aAAc,WACZH,IAAKI,eAEPC,QAAS,WACPP,EAAKR,SAAS,CAAEb,QAAQ,IACxBuB,IAAKC,KAAK,CACRK,SAAU,SACVnB,KAAM,UACNoB,MAAO,yBACPC,mBAAmB,EACnBN,MAAO,UAKbF,IAAKC,KAAK,CACRC,MAAO,KACPC,aAAc,WACZH,IAAKI,eAEPC,QAAS,WACPL,IAAKC,KAAK,CACRK,SAAU,SACVnB,KAAM,QACNoB,MAAO,0BACPC,mBAAmB,4CAOhB,IAAAC,EAAAvC,KACX,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQY,QAAS,kBAAMa,EAAKnB,SAAS,CAAEZ,YAAY,MAAnD,gBAGAI,EAAAC,EAAAC,cAAA,UACEY,QAAS,kBAAMa,EAAKC,UACpBzB,UAAU,4BAFZ,YAQJH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,aACGd,KAAKI,MAAMhB,cAAcqD,OAAS,EACjCzC,KAAKI,MAAMhB,cAAcsD,IAAI,SAACC,EAAUC,GAAX,OAC3BhC,EAAAC,EAAAC,cAAA,MAAI+B,IAAKF,EAAStD,IAChBuB,EAAAC,EAAAC,cAAA,YAAO8B,GACPhC,EAAAC,EAAAC,cAAA,UAAK6B,EAASrD,WACdsB,EAAAC,EAAAC,cAAA,UAAK6B,EAASpD,UACdqB,EAAAC,EAAAC,cAAA,UAAK6B,EAASnD,OACdoB,EAAAC,EAAAC,cAAA,UAAK6B,EAASlD,QACdmB,EAAAC,EAAAC,cAAA,UAAK6B,EAASjD,KAAd,KACAkB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEY,QAAS,kBAAMa,EAAKO,WAAWH,EAAStD,KACxC0B,UAAU,uBAFZ,QAMAH,EAAAC,EAAAC,cAAA,UACEY,QAAS,kBAAMa,EAAKQ,OAAOJ,EAAStD,KACpC0B,UAAU,+BAFZ,cAUNH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkC,QAAS,GAAb,sDASJ,IAAAC,EAAAjD,KACR,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,cACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL5B,GAAG,QACH6B,SAAU,SAAAC,GAAC,OAAI8B,EAAK7B,SAAS,CAAE9B,UAAW6B,EAAEG,OAAOC,WAErDX,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,aACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL5B,GAAG,QACH6B,SAAU,SAAAC,GAAC,OAAI8B,EAAK7B,SAAS,CAAE7B,SAAU4B,EAAEG,OAAOC,WAEpDX,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACL5B,GAAG,QACH6B,SAAU,SAAAC,GAAC,OAAI8B,EAAK7B,SAAS,CAAE5B,MAAO2B,EAAEG,OAAOC,WAEjDX,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,UAAf,cACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,SACL5B,GAAG,SACH6B,SAAU,SAAAC,GAAC,OAAI8B,EAAK7B,SAAS,CAAE3B,OAAQ0B,EAAEG,OAAOC,WAElDX,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,QACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL5B,GAAG,OACH6B,SAAU,SAAAC,GAAC,OAAI8B,EAAK7B,SAAS,CAAE1B,KAAMyB,EAAEG,OAAOC,WAEhDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOG,KAAK,SAASS,QAAS,kBAAMuB,EAAKC,OAAO3B,MAAM,QACtDX,EAAAC,EAAAC,cAAA,SACEG,KAAK,SACLS,QAAS,kBACPuB,EAAK7B,SAAS,CACZZ,YAAY,EACZlB,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,KAAM,MAGV6B,MAAM,SACNR,UAAU,0DAQhB,IAAAoC,EAQAnD,KAAKI,MANPd,EAFE6D,EAEF7D,UACAC,EAHE4D,EAGF5D,SACAC,EAJE2D,EAIF3D,MACAC,EALE0D,EAKF1D,OACAC,EANEyD,EAMFzD,KACAN,EAPE+D,EAOF/D,cAEF,GAAkB,KAAdE,EACF,OAAOwC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAEhB,GAAiB,KAAb/C,EACT,OAAOuC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAEhB,GAAc,KAAV9C,EACT,OAAOsC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAEhB,GAAe,KAAX7C,EACT,OAAOqC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAEhB,GAAa,KAAT5C,EACT,OAAOoC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAGvB,IACMc,EAAW,CACf/D,GAFaW,KAAKI,MAAMhB,cAAcqD,OAAS,EAG/CnD,YACAC,WACAC,QACAC,SACAC,QAEFN,EAAciE,KAAKD,GACnBpD,KAAKoB,SAAS,CACZhC,gBACAoB,YAAY,EACZlB,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAERoC,IAAKC,KAAK,CACRK,SAAU,SACVnB,KAAM,UACNoB,MAAO,qBACPC,mBAAmB,EACnBN,MAAO,sCAKJ3C,GAAI,IAAAiE,EAAAtD,KACHZ,EAAgBY,KAAKI,MAAMhB,cACjC0C,IAAKC,KAAK,CACRM,MAAO,gBACPkB,KAAM,oCACNtC,KAAM,UACNuC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,KAAK,SAAAC,GACN,GAAIA,EAAOtC,MAAO,CAChB,IAAMuC,EAAI1E,EAAc2E,OAAO,SAAApB,GAAQ,OAAIA,EAAStD,KAAOA,IAC3DyC,IAAKC,KAAK,CACRK,SAAU,SACVnB,KAAM,UACNoB,MAAO,WACPkB,KAAI,GAAAS,OAAKF,EAAE,GAAGxE,UAAV,KAAA0E,OAAuBF,EAAE,GAAGvE,SAA5B,sBACJ+C,mBAAmB,EACnBN,MAAO,OAET,IAAMiC,EAAc7E,EAAc2E,OAChC,SAAApB,GAAQ,OAAIA,EAAStD,KAAOA,IAG9BiE,EAAKlC,SAAS,CAAEhC,cAAe6E,SAC1B,GAAuB,WAAnBJ,EAAOK,QAChB,OAAO,uCAKF7E,GACT,IAAM+D,EAAWpD,KAAKI,MAAMhB,cAAc2E,OACxC,SAAApB,GAAQ,OAAIA,EAAStD,KAAOA,IAE9BW,KAAKoB,SAAS,CACZV,QAAQ,EACRD,cAAc,EAEdpB,GAAI+D,EAAS,GAAG/D,GAChBC,UAAW8D,EAAS,GAAG9D,UACvBC,SAAU6D,EAAS,GAAG7D,SACtBC,MAAO4D,EAAS,GAAG5D,MACnBC,OAAQ2D,EAAS,GAAG3D,OACpBC,KAAM0D,EAAS,GAAG1D,4CAKT,IAAAyE,EAAAnE,KACX,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,cACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL5B,GAAG,QACH+E,aAAcpE,KAAKI,MAAMd,UACzB4B,SAAU,SAAAC,GAAC,OAAIgD,EAAK/C,SAAS,CAAE9B,UAAW6B,EAAEG,OAAOC,WAErDX,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,aACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL5B,GAAG,QACH+E,aAAcpE,KAAKI,MAAMb,SACzB2B,SAAU,SAAAC,GAAC,OAAIgD,EAAK/C,SAAS,CAAE7B,SAAU4B,EAAEG,OAAOC,WAEpDX,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACL5B,GAAG,QACH+E,aAAcpE,KAAKI,MAAMZ,MACzB0B,SAAU,SAAAC,GAAC,OAAIgD,EAAK/C,SAAS,CAAE5B,MAAO2B,EAAEG,OAAOC,WAEjDX,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,UAAf,cACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,SACL5B,GAAG,SACH+E,aAAcpE,KAAKI,MAAMX,OACzByB,SAAU,SAAAC,GAAC,OAAIgD,EAAK/C,SAAS,CAAE3B,OAAQ0B,EAAEG,OAAOC,WAElDX,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,QACAJ,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL5B,GAAG,OACH+E,aAAcpE,KAAKI,MAAMV,KACzBwB,SAAU,SAAAC,GAAC,OAAIgD,EAAK/C,SAAS,CAAE1B,KAAMyB,EAAEG,OAAOC,WAEhDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOG,KAAK,SAASS,QAAS,kBAAMyC,EAAKE,UAAU9C,MAAM,WACzDX,EAAAC,EAAAC,cAAA,SACEG,KAAK,SACLS,QAAS,kBACPyC,EAAK/C,SAAS,CACZX,cAAc,EACdC,QAAQ,EACRrB,GAAI,GACJC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,KAAM,MAGV6B,MAAM,SACNR,UAAU,6DAQb,IAAAuD,EACuBtE,KAAKI,MAA3Bf,EADDiF,EACCjF,GAAID,EADLkF,EACKlF,cADLmF,EAE4CvE,KAAKI,MAAlDd,EAFCiF,EAEDjF,UAAWC,EAFVgF,EAEUhF,SAAUC,EAFpB+E,EAEoB/E,MAAOC,EAF3B8E,EAE2B9E,OAAQC,EAFnC6E,EAEmC7E,KAC1C,GAAkB,KAAdJ,EACF,OAAOwC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAEhB,GAAiB,KAAb/C,EACT,OAAOuC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAEhB,GAAc,KAAV9C,EACT,OAAOsC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAEhB,GAAe,KAAX7C,EACT,OAAOqC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAEhB,GAAa,KAAT5C,EACT,OAAOoC,IAAKC,KAAK,CACfK,SAAU,SACVnB,KAAM,QACNoB,MAAO,4BACPC,mBAAmB,IAGvB,IAAMkC,EAAU,CACdnF,KACAC,YACAC,WACAC,QACAC,SACAC,QAEFN,EAAcsD,IAAI,SAACC,EAAUC,GAQ3B,OAPAD,EAAStD,KAAOmF,EAAQnF,GACpBD,EAAcqF,OAAO7B,EAAG,EAAG4B,GAC3B1C,IAAKC,KAAK,CACRd,KAAM,QACNoB,MAAO,UACPkB,KAAM,2BAEL,IAETvD,KAAKoB,SAAS,CACZhC,gBACAqB,cAAc,EACdC,QAAQ,EACRrB,GAAI,GACJC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAERoC,IAAKC,KAAK,CACRK,SAAU,SACVnB,KAAM,UACNoB,MAAK,GAAA2B,OAAK1E,EAAL,KAAA0E,OAAkBzE,EAAlB,kBACL+C,mBAAmB,EACnBN,MAAO,wCAKF,IAAA0C,EAAA1E,KACP8B,IAAKC,KAAK,CACRM,MAAO,gBACPpB,KAAM,UACNuC,kBAAkB,EAClBC,mBAAoB,OACpBC,kBAAmB,UACnBC,kBAAmB,mBACnBgB,iBAAkB,mBACjBf,KAAK,SAAAC,GACFA,EAAOtC,OACTO,IAAKC,KAAK,CACRC,MAAO,KACPC,aAAc,WACZH,IAAKI,eAEPC,QAAS,WACPuC,EAAKtD,SAAS,CACZC,WAAY,GACZI,cAAe,GACflB,QAAQ,0CASX,IAAAqE,EAC8C5E,KAAKI,MAAlDG,EADDqE,EACCrE,OAAQC,EADToE,EACSpE,WAAYC,EADrBmE,EACqBnE,aAAcC,EADnCkE,EACmClE,OAC1C,OACEE,EAAAC,EAAAC,cAAA,YACIP,GAAUP,KAAK6E,YAChBtE,GAAUG,IAAWF,GAAcR,KAAK8E,aACxCvE,GAAUC,GAAcR,KAAK+E,UAC7BxE,GAAUE,GAAgBT,KAAKgF,qBArgBtBC,aClFlBC,IAASC,OAAOvE,EAAAC,EAAAC,cAACsE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.066d7837.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst employeesData = [\r\n  {\r\n    id: 1,\r\n    firstName: 'Sarah',\r\n    lastName: 'Edu',\r\n    email: 'sarah@example.com',\r\n    salary: '40000',\r\n    date: '2019-03-10'\r\n  },\r\n  {\r\n    id: 2,\r\n    firstName: 'Bob',\r\n    lastName: 'Martin',\r\n    email: 'bob@example.com',\r\n    salary: '175000',\r\n    date: '2010-11-01'\r\n  },\r\n  {\r\n    id: 3,\r\n    firstName: 'Rolf',\r\n    lastName: 'Hegdal',\r\n    email: 'rolf@example.com',\r\n    salary: '470000',\r\n    date: '2010-06-15'\r\n  },\r\n  {\r\n    id: 4,\r\n    firstName: 'Susan',\r\n    lastName: 'Jordon',\r\n    email: 'susan@example.com',\r\n    salary: '68000',\r\n    date: '2019-02-05'\r\n  },\r\n  {\r\n    id: 5,\r\n    firstName: 'Arsenio',\r\n    lastName: 'Grant',\r\n    email: 'arsenio@example.com',\r\n    salary: '68000',\r\n    date: '2017-04-18'\r\n  },\r\n  {\r\n    id: 6,\r\n    firstName: 'Tim',\r\n    lastName: 'Fisher',\r\n    email: 'fisher@example.com',\r\n    salary: '120000',\r\n    date: '2014-04-19'\r\n  },\r\n  {\r\n    id: 7,\r\n    firstName: 'Alex',\r\n    lastName: 'Smith',\r\n    email: 'alex@example.com',\r\n    salary: '87000',\r\n    date: '2012-05-07'\r\n  },\r\n  {\r\n    id: 8,\r\n    firstName: 'Ede',\r\n    lastName: 'Judge',\r\n    email: 'ede@example.com',\r\n    salary: '9000',\r\n    date: '2018-01-20'\r\n  },\r\n  {\r\n    id: 9,\r\n    firstName: 'Mark',\r\n    lastName: 'jonas',\r\n    email: 'mark@example.com',\r\n    salary: '71000',\r\n    date: '2017-08-27'\r\n  },\r\n  {\r\n    id: 10,\r\n    firstName: 'Sasha',\r\n    lastName: 'Grief',\r\n    email: 'sasha@example.com',\r\n    salary: '94000',\r\n    date: '2016-07-11'\r\n  }\r\n];\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      adminEmail: 'admin@example.com',\r\n      adminPassword: 'qwerty',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      salary: '',\r\n      date: '',\r\n      isUser: false,\r\n      employeesData,\r\n      addClicked: false,\r\n      editeClicked: false,\r\n      helper: true\r\n    };\r\n    // this.delete = this.delete.bind(this);\r\n    // this.adminLogin = this.adminLogin.bind(this);\r\n    // this.loginForm = this.loginForm.bind(this);\r\n    // this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  loginForm() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form>\r\n          <h1>Admin Login</h1>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={e => this.setState({ inputEmail: e.target.value })}\r\n            placeholder=\"admin@example.com\"\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={e => this.setState({ inputPassword: e.target.value })}\r\n            placeholder=\"qwerty\"\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            onClick={() => this.login()}\r\n            value=\"Login\"\r\n            className=\"login-btn\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  login() {\r\n    const { adminEmail, adminPassword, inputEmail, inputPassword } = this.state;\r\n    if (inputEmail === adminEmail && inputPassword === adminPassword) {\r\n      Swal.fire({\r\n        timer: 1500,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        onClose: () => {\r\n          this.setState({ isUser: true });\r\n          Swal.fire({\r\n            position: 'center',\r\n            type: 'success',\r\n            title: 'Successfully logged in',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        timer: 1500,\r\n        onBeforeOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        onClose: () => {\r\n          Swal.fire({\r\n            position: 'center',\r\n            type: 'error',\r\n            title: 'Incorrect credentials !',\r\n            showConfirmButton: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  dataTables() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header>\r\n          <h1>Employees Data</h1>\r\n          <div className=\"main-btns\">\r\n            <button onClick={() => this.setState({ addClicked: true })}>\r\n              Add Employee\r\n            </button>\r\n            <button\r\n              onClick={() => this.logout()}\r\n              className=\"logout-btn accent-button\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </header>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Salary ($)</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.employeesData.length > 0 ? (\r\n              this.state.employeesData.map((employee, i) => (\r\n                <tr key={employee.id}>\r\n                  <td>{++i}</td>\r\n                  <td>{employee.firstName}</td>\r\n                  <td>{employee.lastName}</td>\r\n                  <td>{employee.email}</td>\r\n                  <td>{employee.salary}</td>\r\n                  <td>{employee.date} </td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => this.showUpdate(employee.id)}\r\n                      className=\"button muted-button\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => this.delete(employee.id)}\r\n                      className=\"button muted-button actions\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={7}>No Employees</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  addForm() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form>\r\n          <h1>Add Employee</h1>\r\n          <label htmlFor=\"fName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fName\"\r\n            onChange={e => this.setState({ firstName: e.target.value })}\r\n          />\r\n          <label htmlFor=\"lName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lName\"\r\n            onChange={e => this.setState({ lastName: e.target.value })}\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={e => this.setState({ email: e.target.value })}\r\n          />\r\n          <label htmlFor=\"salary\">Salary ($)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"salary\"\r\n            onChange={e => this.setState({ salary: e.target.value })}\r\n          />\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            onChange={e => this.setState({ date: e.target.value })}\r\n          />\r\n          <div className=\"main-btns\">\r\n            <input type=\"button\" onClick={() => this.add()} value=\"Add\" />\r\n            <input\r\n              type=\"button\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  addClicked: false,\r\n                  firstName: '',\r\n                  lastName: '',\r\n                  email: '',\r\n                  salary: '',\r\n                  date: ''\r\n                })\r\n              }\r\n              value=\"Cancel\"\r\n              className=\"accent-button cancel\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  add() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date,\r\n      employeesData\r\n    } = this.state;\r\n    if (firstName === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (lastName === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (email === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (salary === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (date === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    }\r\n    const length = this.state.employeesData.length + 1;\r\n    const userData = {\r\n      id: length,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date\r\n    };\r\n    employeesData.push(userData);\r\n    this.setState({\r\n      employeesData,\r\n      addClicked: false,\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      salary: '',\r\n      date: ''\r\n    });\r\n    Swal.fire({\r\n      position: 'center',\r\n      type: 'success',\r\n      title: 'New employee added',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n    // console.log(this.state.employeesData);\r\n  }\r\n\r\n  delete(id) {\r\n    const employeesData = this.state.employeesData;\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        const x = employeesData.filter(employee => employee.id === id);\r\n        Swal.fire({\r\n          position: 'center',\r\n          type: 'success',\r\n          title: 'Deleted!',\r\n          text: `${x[0].firstName} ${x[0].lastName} has been deleted.`,\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        });\r\n        const updatedList = employeesData.filter(\r\n          employee => employee.id !== id\r\n        );\r\n        // console.log(updatedList);\r\n        this.setState({ employeesData: updatedList });\r\n      } else if (result.dismiss === 'cancel') {\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  showUpdate(id) {\r\n    const userData = this.state.employeesData.filter(\r\n      employee => employee.id === id\r\n    );\r\n    this.setState({\r\n      helper: false,\r\n      editeClicked: true,\r\n      // userData: userData[0],\r\n      id: userData[0].id,\r\n      firstName: userData[0].firstName,\r\n      lastName: userData[0].lastName,\r\n      email: userData[0].email,\r\n      salary: userData[0].salary,\r\n      date: userData[0].date\r\n    });\r\n    // console.log(userData[0]);\r\n  }\r\n\r\n  updateForm() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form>\r\n          <h1>Update Employee</h1>\r\n          <label htmlFor=\"fName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fName\"\r\n            defaultValue={this.state.firstName}\r\n            onChange={e => this.setState({ firstName: e.target.value })}\r\n          />\r\n          <label htmlFor=\"lName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lName\"\r\n            defaultValue={this.state.lastName}\r\n            onChange={e => this.setState({ lastName: e.target.value })}\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            defaultValue={this.state.email}\r\n            onChange={e => this.setState({ email: e.target.value })}\r\n          />\r\n          <label htmlFor=\"salary\">Salary ($)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"salary\"\r\n            defaultValue={this.state.salary}\r\n            onChange={e => this.setState({ salary: e.target.value })}\r\n          />\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            defaultValue={this.state.date}\r\n            onChange={e => this.setState({ date: e.target.value })}\r\n          />\r\n          <div className=\"main-btns\">\r\n            <input type=\"button\" onClick={() => this.update()} value=\"Update\" />\r\n            <input\r\n              type=\"button\"\r\n              onClick={() =>\r\n                this.setState({\r\n                  editeClicked: false,\r\n                  helper: true,\r\n                  id: '',\r\n                  firstName: '',\r\n                  lastName: '',\r\n                  email: '',\r\n                  salary: '',\r\n                  date: ''\r\n                })\r\n              }\r\n              value=\"Cancel\"\r\n              className=\"accent-button cancel\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  update() {\r\n    const { id, employeesData } = this.state;\r\n    let { firstName, lastName, email, salary, date } = this.state;\r\n    if (firstName === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (lastName === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (email === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (salary === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    } else if (date === '') {\r\n      return Swal.fire({\r\n        position: 'center',\r\n        type: 'error',\r\n        title: 'All fields are required !',\r\n        showConfirmButton: true\r\n      });\r\n    }\r\n    const newData = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date\r\n    };\r\n    employeesData.map((employee, i) => {\r\n      employee.id === newData.id\r\n        ? employeesData.splice(i, 1, newData)\r\n        : Swal.fire({\r\n            type: 'error',\r\n            title: 'Oops...',\r\n            text: 'Something went wrong!'\r\n          });\r\n      return false;\r\n    });\r\n    this.setState({\r\n      employeesData,\r\n      editeClicked: false,\r\n      helper: true,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      salary: '',\r\n      date: ''\r\n    });\r\n    Swal.fire({\r\n      position: 'center',\r\n      type: 'success',\r\n      title: `${firstName} ${lastName} data updated.`,\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n    // console.log(this.state.employeesData);\r\n  }\r\n\r\n  logout() {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#d33',\r\n      cancelButtonColor: '#3085d6',\r\n      confirmButtonText: 'Yes, log me out!',\r\n      cancelButtonText: 'No, keep me in'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        Swal.fire({\r\n          timer: 1500,\r\n          onBeforeOpen: () => {\r\n            Swal.showLoading();\r\n          },\r\n          onClose: () => {\r\n            this.setState({\r\n              inputEmail: '',\r\n              inputPassword: '',\r\n              isUser: false\r\n            });\r\n            // console.log(this.state);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isUser, addClicked, editeClicked, helper } = this.state;\r\n    return (\r\n      <div>\r\n        {!isUser && this.loginForm()}\r\n        {isUser && helper && !addClicked && this.dataTables()}\r\n        {isUser && addClicked && this.addForm()}\r\n        {isUser && editeClicked && this.updateForm()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n"],"sourceRoot":""}